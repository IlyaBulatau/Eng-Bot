version: '3.7'
services:

  cache:
    image: redis:alpine
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: redis-server
    container_name: cache
    volumes:
      - cache_data:/data

  db:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    container_name: db
    volumes:
      - db_data:/data/db

  broker:
    image: rabbitmq
    container_name: broker
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
    volumes:
      - broker_data:/data
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 2


  bot:
    build:
      context: .
      dockerfile: bot.Dockerfile
    container_name: bot
    restart: always
    volumes:
      - ./engbot:/code/bot/engbot
    depends_on: 
      db:
        condition: service_started
      broker:
        condition: service_healthy

  worker:
    build:
      dockerfile: dev.Dockerfile
      context: .
    container_name: worker
    restart: always
    entrypoint: bash -c "export DEBUG=0 && celery -A engbot.tasks.tasks:scheduler worker"
    volumes:  
      - ./engbot:/code/bot/engbot
    depends_on:
      bot:
        condition: service_started
      broker:
        condition: service_healthy



volumes:
  cache_data:
  db_data:
  broker_data:
