name: Testing Bot
env:
  ENV_FILE: ".env.test"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10.6
      uses: actions/setup-python@v3
      with:
        python-version: "3.10.6"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Export DEBUG environment variable
      run: |
          export DEBUG=1
    - name: Create env file
      run: |
          touch ${{ env.ENV_FILE }}
          echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> ${{ env.ENV_FILE }}
          echo DATABASE_URL="mongodb://test:test@0.0.0.0" >> ${{ env.ENV_FILE }}
          echo MONGO_DB_NAME="test" >> ${{ env.ENV_FILE }}
          echo MONGO_COLLECTION_NAME="test" >> ${{ env.ENV_FILE }}
          echo MONGO_USERNAME="test" >> ${{ env.ENV_FILE }}
          echo MONGO_PASSWORD="test" >> ${{ env.ENV_FILE }}
          echo REDIS_HOST="localhost" >> ${{ env.ENV_FILE }}
          echo REDIS_PORT="6379" >> ${{ env.ENV_FILE }}
          echo RABBITMQ_USER="test" >> ${{ env.ENV_FILE }}
          echo RABBITMQ_PASSWORD="test" >> ${{ env.ENV_FILE }}
          echo RABBITMQ_HOST="localhost" >> ${{ env.ENV_FILE }}
          echo RABBITMQ_PORT="5672" >> ${{ env.ENV_FILE }}
    
    - name: Set up MongoDB
      run: | 
         docker compose --env-file ${{ env.ENV_FILE }} -f docker-compose.test.yaml up -d

    - name: Test with pytest
      run: |
        poetry run pytest . -s -v
